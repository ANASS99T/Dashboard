[{"F:\\react\\dashboard\\src\\reportWebVitals.js":"1","F:\\react\\dashboard\\src\\App.js":"2","F:\\react\\dashboard\\src\\comp\\Charts.js":"3","F:\\react\\dashboard\\src\\index.js":"4","F:\\react\\dashboard\\src\\comp\\TimeLine.js":"5","F:\\react\\dashboard\\src\\comp\\Table.js":"6","F:\\react\\dashboard\\src\\comp\\status.js":"7"},{"size":362,"mtime":1607329915666,"results":"8","hashOfConfig":"9"},{"size":7313,"mtime":1610459121971,"results":"10","hashOfConfig":"9"},{"size":10987,"mtime":1610444491755,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1607329915666,"results":"12","hashOfConfig":"9"},{"size":8582,"mtime":1610459271790,"results":"13","hashOfConfig":"9"},{"size":2956,"mtime":1610459132117,"results":"14","hashOfConfig":"9"},{"size":652,"mtime":1610222435727,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hl0v",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\react\\dashboard\\src\\reportWebVitals.js",[],"F:\\react\\dashboard\\src\\App.js",["33","34"],"F:\\react\\dashboard\\src\\comp\\Charts.js",["35"],"import React from \"react\";\r\nimport { Bar, Line, Doughnut, Pie } from \"react-chartjs-2\";\r\n\r\nexport const Orders = () => {\r\n  return (\r\n    <Line\r\n      data={{\r\n        labels: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"],\r\n        datasets:[\r\n            {\r\n                label: 'Total Orders',\r\n                data: [40,30,20,60,20,90,20,30,40,30,20,60],\r\n                // backgroundColor:'#fff', // it can be an array\r\n                borderColor: '#fff',  // it can be an array\r\n                borderWidth: 2,\r\n                barPercentage: 0.4,\r\n                // offset: false\r\n                minBarLength:0,\r\n                pointBackgroundColor:'#fff',\r\n                pointBorderColor:'#fff',\r\n                fill: false,\r\n            }\r\n        ]\r\n      }}\r\n      height={100}\r\n      // width={700}\r\n      \r\n      options={{ \r\n          maintainAspectRatio: false,\r\n          layout:{\r\n            padding:{\r\n                left: 5,\r\n                right: 5,\r\n                bottom: 5,\r\n                top:5\r\n            },\r\n        },\r\n          legend:{\r\n              display: false,\r\n              rtl:true\r\n          },\r\n          title:{\r\n              display:false,\r\n              text:'Total Profit',\r\n          },\r\n          scales:{\r\n              yAxes:[{\r\n                    display:false,\r\n                    ticks:{\r\n                        fontColor:'white',\r\n                        beginAtZero:true\r\n                    }\r\n                }],\r\n            xAxes:[{\r\n                display:false,\r\n                ticks:{\r\n                    fontColor:'white',\r\n                },\r\n                gridLines: {\r\n                  display: false,\r\n                },\r\n            }],\r\n            \r\n          }\r\n        }}\r\n        \r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport const Profit = () => {\r\n    return (\r\n      <Line\r\n        data={{\r\n          labels: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"],\r\n          datasets:[\r\n              {\r\n                  label: 'Total Profit',\r\n                  data: [7800, 6000,10000,7890,6540,1250,20000,15000,7800, 6000,10000,7890],\r\n                //   backgroundColor:'#D7DAE3', // it can be an array\r\n                  borderColor: '#D7DAE3',  // it can be an array\r\n                  borderWidth: 2,\r\n                  barPercentage: 0.4,\r\n                  // offset: false\r\n                  fill: false,\r\n                  pointBackgroundColor:'white',\r\n                  pointBorderColor:'#fff'\r\n              }\r\n          ]\r\n        }}\r\n        height={100}\r\n        // width={700}\r\n        \r\n        options={{ \r\n            maintainAspectRatio: false,\r\n            layout:{\r\n                padding:{\r\n                    left: 5,\r\n                    right: 5,\r\n                    bottom: 5,\r\n                    top:5\r\n                },\r\n            },\r\n            legend:{\r\n                display: false,\r\n                rtl:true,\r\n            },\r\n            title:{\r\n                display:false,\r\n                text:'Total Profit',\r\n            },\r\n            scales:{\r\n                yAxes:[{\r\n                      display:false,\r\n                      ticks:{\r\n                          fontColor:'white',\r\n                          beginAtZero:true\r\n                      },\r\n                      \r\n                  }],\r\n              xAxes:[{\r\n                  display:false,\r\n                  ticks:{\r\n                      fontColor:'white',\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n              }],\r\n              \r\n            },\r\n            // stacked: true,\r\n            \r\n        }}\r\n          \r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  export const Feedbacks = () => {\r\n    return (\r\n      <Doughnut //Pie\r\n        data={{\r\n          labels: [\"like\", \"love\",\"happy\",\"sad\", \"angry\", \"dislike\"],\r\n          datasets:[\r\n              {\r\n                    label: 'Total Feedback',\r\n                    data: [120, 80, 30, 5, 25,30],\r\n                    backgroundColor:[\r\n                        '#2196f3',\r\n                        '#ef5350',\r\n                        '#43a047',\r\n                        '#616161',\r\n                        'rgb(255, 42, 0)',\r\n                        '#bdbdbd'\r\n                    ],\r\n                    // borderJoinStyle: \"miter\",\r\n                    // borderWidth: 0,\r\n                    // indexLabelPlacement: \"outside\",\r\n                    // weight:'30%',\r\n             \r\n              }\r\n          ],\r\n          \r\n        }}\r\n        // height={100}\r\n        // width={100}\r\n        options={{ \r\n            maintainAspectRatio: true,\r\n            // responsive: true,\r\n            // cutoutPercentage: 120,\r\n            legend:{\r\n                display: true,\r\n                rtl:true,\r\n                position:'left'\r\n            },\r\n            scales:{\r\n                yAxes:[{\r\n                      display:false,\r\n                      ticks:{\r\n                          fontColor:'white'\r\n                      },\r\n                      \r\n                  }],\r\n              xAxes:[{\r\n                  display:false,\r\n                  ticks:{\r\n                      fontColor:'white',\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n              }],\r\n              \r\n            },\r\n        }}\r\n          \r\n      />\r\n    );\r\n  };\r\n\r\n\r\n  export const Customers = () => {\r\n    return (\r\n      <Bar\r\n        data={{\r\n          labels: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"],\r\n          datasets:[\r\n              {\r\n                  label: 'Total Orders',\r\n                  data: [5,15,25,40,30,50,20,15,5,15,25,40],\r\n                  backgroundColor:'#fff', // it can be an array\r\n                  borderColor: '#fff',  // it can be an array\r\n                  borderWidth: 2,\r\n                  barPercentage: 0.4,\r\n                  // offset: false\r\n                  minBarLength:0,\r\n                  pointBackgroundColor:'#fff',\r\n                  pointBorderColor:'#D7DAE3'\r\n              }\r\n          ]\r\n        }}\r\n        height={100}\r\n        // width={700}\r\n        \r\n        options={{ \r\n            maintainAspectRatio: false,\r\n            layout:{\r\n              padding:{\r\n                  left: 5,\r\n                  right: 5,\r\n                  bottom: 5,\r\n                  top:5\r\n              },\r\n          },\r\n            legend:{\r\n                display: false,\r\n                rtl:true\r\n            },\r\n            title:{\r\n                display:false,\r\n                text:'Total Profit',\r\n            },\r\n            scales:{\r\n                yAxes:[{\r\n                      display:false,\r\n                      ticks:{\r\n                          fontColor:'white',\r\n                          beginAtZero:true\r\n                      }\r\n                  }],\r\n              xAxes:[{\r\n                  display:false,\r\n                  ticks:{\r\n                      fontColor:'white',\r\n                  },\r\n                  gridLines: {\r\n                    display: false,\r\n                  },\r\n              }],\r\n              \r\n            }\r\n          }}\r\n          \r\n      />\r\n    );\r\n  };\r\n\r\n\r\n// export const Feedbacks1 = () =>{\r\n\r\n//   return(\r\n//     <Bar\r\n//       data={\r\n//         {\r\n//           labels: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"],\r\n//           datasets:[\r\n//             {\r\n//                   label: 'Total Feedback',\r\n//                   data: [120, 80, 30, 5, 25,30],\r\n//                   backgroundColor:[\r\n//                       '#2196f3',\r\n//                       '#f44336',\r\n//                       '#43a047',\r\n//                       '#616161',\r\n//                       '#d50000',\r\n//                       '#bdbdbd'\r\n//                   ],\r\n//                   // borderWidth: 0,  \r\n//             },\r\n//             {\r\n//               label: 'Total Feedback',\r\n//               data: [30\r\n//                 ,25\r\n//                 ,80\r\n//                 ,5\r\n//                 ,120\r\n//                 ,30],\r\n//               backgroundColor:[\r\n//                   '#2196f3',\r\n//                   '#f44336',\r\n//                   '#43a047',\r\n//                   '#616161',\r\n//                   '#d50000',\r\n//                   '#bdbdbd'\r\n//               ],\r\n//               // borderWidth: 0,  \r\n//             },\r\n//             {\r\n//               label: 'Total Feedback',\r\n//               data: [80,\r\n//                 5,\r\n//                 120,\r\n//                 30,\r\n//                 30,\r\n//                 25],\r\n//               backgroundColor:[\r\n//                   '#2196f3',\r\n//                   '#f44336',\r\n//                   '#43a047',\r\n//                   '#616161',\r\n//                   '#d50000',\r\n//                   '#bdbdbd'\r\n//               ],\r\n//               // borderWidth: 0,  \r\n//             },\r\n//             {\r\n//               label: 'Total Feedback',\r\n//               data: [25,\r\n//                 30,\r\n//                 80,\r\n//                 5,\r\n//                 120,\r\n//                 30],\r\n//               backgroundColor:[\r\n//                   '#2196f3',\r\n//                   '#f44336',\r\n//                   '#43a047',\r\n//                   '#616161',\r\n//                   '#d50000',\r\n//                   '#bdbdbd'\r\n//               ],\r\n//               // borderWidth: 0,  \r\n//             }\r\n//         ]\r\n//         }\r\n//       } \r\n//       height={100}\r\n//         // width={700}\r\n        \r\n//         options={{ \r\n//             maintainAspectRatio: false,\r\n//             layout:{\r\n//               padding:{\r\n//                   left: 5,\r\n//                   right: 5,\r\n//                   bottom: 5,\r\n//                   top:5\r\n//               },\r\n//           },\r\n//             legend:{\r\n//                 display: false,\r\n//                 rtl:true\r\n//             },\r\n//             title:{\r\n//                 display:false,\r\n//                 text:'Total Profit',\r\n//             },\r\n//             scales:{\r\n//                 yAxes:[{\r\n//                       display:false,\r\n//                       ticks:{\r\n//                           fontColor:'white',\r\n//                           beginAtZero:true,\r\n\r\n//                       },\r\n//                       stacked: true\r\n//                   }],\r\n//               xAxes:[{\r\n//                   display:false,\r\n//                   ticks:{\r\n//                       fontColor:'white',\r\n//                   },\r\n//                   stacked:true,\r\n//                   gridLines: {\r\n//                     display: false,\r\n//                   },\r\n//               }],\r\n              \r\n//             }\r\n//           }} \r\n\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n//     />\r\n//   )\r\n// }","F:\\react\\dashboard\\src\\index.js",[],["36","37"],"F:\\react\\dashboard\\src\\comp\\TimeLine.js",["38","39","40","41","42","43","44","45","46","47","48","49"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ReactCardCarousel from 'react-card-carousel';\r\nimport './timeLine.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: '6px 16px',\r\n  },\r\n  secondaryTail: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport  function TimeLine() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Timeline align=\"alternate\">\r\n\r\n      <TimelineItem >\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n          10 minutes ago\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot style={{background:'#1976d2'}}/>\r\n          <TimelineConnector style={{background:'#1976d2'}} />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography style={{fontSize:'14px', fontWeight:'700',textAlign:'left'}}>\r\n                Ahemd BenArfa\r\n            </Typography>\r\n            <Typography style={{fontSize:'12px',textAlign:'left'}}>\r\n                New order <a href='#'>#idCommande</a>\r\n            </Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n\r\n      <TimelineItem >\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n          20 minutes ago\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot style={{background:'#4527a0'}}/>\r\n          <TimelineConnector style={{background:'#4527a0'}} />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography style={{fontSize:'14px', fontWeight:'700',textAlign:'left'}}>\r\n                Ahemd BenArfa\r\n            </Typography>\r\n            <Typography style={{fontSize:'12px', textAlign:'left'}}>\r\n                Shared a review on <a href='#'>#IdProduit</a>\r\n            </Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n\r\n      <TimelineItem >\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n          40 minutes ago\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot style={{background:'#00e676'}}/>\r\n          <TimelineConnector style={{background:'#00e676'}} />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography style={{fontSize:'14px', fontWeight:'700',textAlign:'left'}}>\r\n                Ahemd BenArfa\r\n            </Typography>\r\n            <Typography style={{fontSize:'12px',textAlign:'left'}}>\r\n                New order <a href='#'>#idCommande</a>\r\n            </Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      \r\n      <TimelineItem >\r\n        <TimelineOppositeContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n          55 minutes ago\r\n          </Typography>\r\n        </TimelineOppositeContent>\r\n        <TimelineSeparator>\r\n          <TimelineDot style={{background:'#ef6c00'}}/>\r\n          {/* <TimelineConnector style={{background:'#ef6c00'}} /> */}\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Paper elevation={3} className={classes.paper}>\r\n            <Typography style={{fontSize:'14px', fontWeight:'700',textAlign:'left'}}>\r\n                Ahemd BenArfa\r\n            </Typography>\r\n            <Typography style={{fontSize:'12px', textAlign:'left'}}>\r\n                Shared a review on <a href='#'>#IdProduit</a>\r\n            </Typography>\r\n          </Paper>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      \r\n    </Timeline>\r\n  );\r\n}\r\n\r\n\r\nexport const TimeLineCards = () =>{\r\n    \r\n   \r\n    return(\r\n        <div className=\"cards\">\r\n            <ReactCardCarousel autoplay={ true } autoplay_speed={ 2500 }>\r\n                <div className='card timeLine'>\r\n                    <h5>Ahemd BenArfa</h5> <cite> 55 minutes ago</cite>\r\n                    <br/>\r\n                    <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                </div>\r\n                <div className='card timeLine'>\r\n                    <h5>Ahemd BenArfa</h5> <cite> 55 minutes ago</cite>\r\n                    <br/>\r\n                    <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                </div>\r\n                <div className='card timeLine'>\r\n                    <h5>Ahemd BenArfa</h5> <cite> 55 minutes ago</cite>\r\n                    <br/>\r\n                    <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                </div>\r\n                <div className='card timeLine'>\r\n                    <h5>Ahemd BenArfa</h5> <cite> 55 minutes ago</cite>\r\n                    <br/>\r\n                    <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                </div>\r\n                <div className='card timeLine'>\r\n                    <h5>Ahemd BenArfa</h5> <cite> 55 minutes ago</cite>\r\n                    <br/>\r\n                    <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                </div>\r\n            </ReactCardCarousel>  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const VirtTimeline = ()=>{\r\n    return(\r\n        <div id=\"carouselExampleControls\" className=\"carousel slide\" data-bs-ride=\"carousel\">\r\n            <div className=\"carousel-inner\">\r\n                <div className=\"carousel-item active\">\r\n                    <div className='card-content'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col title\">\r\n                                <cite>55 minutes ago</cite>\r\n                                <h5>Ahemd BenArfa</h5>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"carousel-item\">\r\n                    <div className='card-content'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <cite>40 minutes ago</cite>\r\n                                <h5>Ahemd BenArfa</h5>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>Shared a review on <a href='#'>#IdProduit</a></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"carousel-item\">\r\n                    <div className='card-content'>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <cite>20 minutes ago</cite>\r\n                                <h5>Ahemd BenArfa</h5>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <p>New order <a href='#'>#idCommande</a></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <a className=\"carousel-control-prev\" href=\"#carouselExampleControls\" role=\"button\" data-bs-slide=\"prev\">\r\n                {/* <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span> */}\r\n                <span className=\"visually-hidden\">Previous</span>\r\n            </a>\r\n            <a className=\"carousel-control-next\" href=\"#carouselExampleControls\" role=\"button\" data-bs-slide=\"next\">\r\n                {/* <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span> */}\r\n                <span className=\"visually-hidden\">Next</span>\r\n            </a>\r\n        </div>\r\n        \r\n    )\r\n}","F:\\react\\dashboard\\src\\comp\\Table.js",[],"F:\\react\\dashboard\\src\\comp\\status.js",[],{"ruleId":"50","severity":1,"message":"51","line":6,"column":9,"nodeType":"52","messageId":"53","endLine":6,"endColumn":17},{"ruleId":"50","severity":1,"message":"54","line":6,"column":19,"nodeType":"52","messageId":"53","endLine":6,"endColumn":32},{"ruleId":"50","severity":1,"message":"55","line":2,"column":31,"nodeType":"52","messageId":"53","endLine":2,"endColumn":34},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":46,"column":27,"nodeType":"62","endLine":46,"endColumn":39},{"ruleId":"60","severity":1,"message":"61","line":68,"column":36,"nodeType":"62","endLine":68,"endColumn":48},{"ruleId":"60","severity":1,"message":"61","line":90,"column":27,"nodeType":"62","endLine":90,"endColumn":39},{"ruleId":"60","severity":1,"message":"61","line":112,"column":36,"nodeType":"62","endLine":112,"endColumn":48},{"ruleId":"60","severity":1,"message":"61","line":132,"column":43,"nodeType":"62","endLine":132,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":137,"column":43,"nodeType":"62","endLine":137,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":142,"column":43,"nodeType":"62","endLine":142,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":147,"column":43,"nodeType":"62","endLine":147,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":152,"column":43,"nodeType":"62","endLine":152,"endColumn":55},{"ruleId":"60","severity":1,"message":"61","line":172,"column":55,"nodeType":"62","endLine":172,"endColumn":67},{"ruleId":"60","severity":1,"message":"61","line":185,"column":55,"nodeType":"62","endLine":185,"endColumn":67},{"ruleId":"60","severity":1,"message":"61","line":198,"column":46,"nodeType":"62","endLine":198,"endColumn":58},"no-unused-vars","'TimeLine' is defined but never used.","Identifier","unusedVar","'TimeLineCards' is defined but never used.","'Pie' is defined but never used.","no-native-reassign",["63"],"no-negated-in-lhs",["64"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]